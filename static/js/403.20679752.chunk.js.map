{"version":3,"file":"static/js/403.20679752.chunk.js","mappings":"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","sources":["pages/Contacts/Contacts.styled.js","redux/contacts/selectors.js","components/Form/Form.styled.js","components/Form/Form.jsx","components/ContactsItem/ContactsItem.styled.js","components/ContactsItem/ContactsItem.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Loader/Loader.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: blue;\n`;\n\nexport const Wrapper = styled.section`\n  padding: 4em;\n  background: papayawhip;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  max-width: 800px;\n`;\n\nexport const Label = styled.label`\n  font-size: 18px;\n  color: black;\n  margin-right: 15px;\n`;\n\nexport const Input = styled.input`\n  padding: 0.5em;\n  margin: 0.5em;\n  color: palevioletred;\n  background: papayawhip;\n  border: solid black 1px;\n  border-radius: 3px;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  color: palevioletred;\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid palevioletred;\n  border-radius: 3px;\n  display: block;\n\n  &:hover {\n    color: red;\n  }\n`;\n","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nimport { SearchForm, Label, Input, Button } from 'components/Form/Form.styled';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'number':\n        return setNumber(value);\n      default:\n        throw new Error('Unexpected type of field');\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return toast.error(`${name} is already in contacts.`);\n    } else {\n      dispatch(\n        addContact({\n          id: nanoid(),\n          name: name,\n          number: number,\n        })\n      );\n      resetForm();\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <Label htmlFor=\"name\">\n        Name:\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          required\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Name\"\n        />\n      </Label>\n      <Label htmlFor=\"number\">\n        Number:\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          required\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={number}\n          onChange={handleChange}\n          placeholder=\"+312345678\"\n        />\n      </Label>\n\n      <Button type=\"submit\">Add contact</Button>\n      <Toaster />\n    </SearchForm>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Item = styled.p`\n  font-size: 18px;\n  color: blue;\n  margin-right: 15px;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  color: palevioletred;\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid palevioletred;\n  border-radius: 3px;\n  display: block;\n\n  &:hover {\n    color: red;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Item } from 'components/ContactsItem/ContactsItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const onDelete = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n  return (\n    <>\n      <Item>\n        {name}: {number}\n      </Item>\n      <Button\n        onClick={() => {\n          onDelete(id);\n        }}\n      >\n        Delete\n      </Button>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n\nexport const Items = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  width: 400px;\n`;\n","import React from 'react';\nimport ContactItem from 'components/ContactsItem/ContactsItem';\nimport { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectFilteredContacts,\n} from 'redux/contacts/selectors';\nimport { List, Items } from 'components/ContactsList/ContactsList.styled';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <List>\n      {contacts.length > 0 &&\n        filteredContacts.map(({ id, name, number }) => {\n          return (\n            <Items key={id}>\n              <ContactItem id={id} name={name} number={number} />\n            </Items>\n          );\n        })}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  padding: 0.5em;\n  margin: 0.5em;\n  color: ${props => props.inputColor || 'palevioletred'};\n  background: papayawhip;\n  border: solid black 1px;\n  border-radius: 3px;\n`;\n\nexport const Label = styled.label`\n  font-size: 18px;\n  color: black;\n  margin-right: 15px;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { Input, Label } from 'components/Filter/Filter.styled';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"name\" value={filter} onChange={changeFilter}></Input>\n    </Label>\n  );\n};\n\nexport default Filter;\n","import FadeLoader from 'react-spinners/FadeLoader';\n\nexport const Loader = () => {\n  return (\n    <FadeLoader\n      color=\"blue\"\n      loading=\"loading\"\n      size={100}\n      cssOverride={{\n        position: 'fixed',\n        top: '50%',\n        left: ' 50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n      aria-label=\"Loading Spinner\"\n      data-testid=\"loader\"\n    />\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { Title, Wrapper } from 'pages/Contacts/Contacts.styled';\nimport ContactForm from 'components/Form/Form';\nimport ContactList from 'components/ContactsList/ContactsList';\nimport Filter from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      <Title title=\"Phonebook\">Phonebook</Title>\n      <ContactForm />\n      <Title title=\"Contacts\">Contacts</Title>\n      <Filter />\n      {isLoading && !error && <Loader />}\n      {error && <p>{error}</p>}\n      {!isLoading && <ContactList />}\n    </Wrapper>\n  );\n};\n\nexport default Contacts;\n"],"names":["Title","styled","Wrapper","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectFilteredContacts","createSelector","normalizedFilter","toLowerCase","name","includes","SearchForm","Label","Input","Button","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","Error","resetForm","onSubmit","preventDefault","find","contact","toast","addContact","id","nanoid","htmlFor","type","pattern","required","title","onChange","placeholder","Item","onClick","contactId","deleteContact","List","Items","filteredContacts","length","map","props","inputColor","setFilter","Loader","color","loading","size","cssOverride","position","top","left","transform","useEffect","fetchContacts"],"sourceRoot":""}